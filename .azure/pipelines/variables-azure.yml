
# Use parameters if you want them to influence the general variables
parameters:
- name: enableAuthentication
  type: boolean
  default: false

- name: resourceGroupNameBase
  type: string

- name: baseName
  type: string

- name: environmentSuffix
  type: string

variables:

- name: location
  value: westus

- name: enableAuthentication
  value: ${{ parameters.enableAuthentication }}

# Inject additional secrets that are external and not created during the arm deployment process
# Do not hardcode real secrets into the yaml, you can use variables[] configured from the portal
- name: additionalKeyVaultSecrets
  ${{ if parameters.enableAuthentication }}:
    value: >-
      {
        "items": [
          {"name": "ArribaServer--EnabledAuthentication", "secret": "$(enableAuthentication)" },
          {"name": "ArribaServer--FrontendBaseUrl", "secret": "https://$(WEB_APP_NAME).azurewebsites.net/" },
          {"name": "ArribaServer--OAuthConfig--RedirectUrl", "secret": "https://$(WEB_APP_NAME).azurewebsites.net/data/api/oauth/auth-code" },
          {"name": "AZPAT", "secret": "$(AZPAT)" },
          {"name": "APPSECRET", "secret": "$(APPSECRET)" }
        ]
      }
  ${{ if eq(parameters.enableAuthentication, False) }}:
    value: >-
      {
        "items": [
          {"name": "Authentication--Enabled", "secret": "$(enableAuthentication)" },
          {"name": "AZPAT", "secret": "$(AZPAT)" }
        ]
      }

# Variables for azure container registry
- name: azureSubscriptionTeamServicesServiceConnectionName
  value: Commercial Software Engineering - Team Services (ERICMAI) (b32e3156-186b-459d-b296-7a891c1aec8b)

- name: azureSubscriptionTeamServicesAcrName
  value: arriba.azurecr.io

# Configure here, in a group, or portal variables
- name: azureSubscriptionServiceConnectionName
  value: Commerical Software Engineering - Agile Response (ERICMAI) (b8dc8f25-7e85-4e7e-bde2-3d621b696e9b)

# Use the resource group name base supplied if triggered manually,
# otherwise fallback to configuration from portal variables.
# '' is not a valid option on the parameters so 'useDefault' will
# signal to use the value from configuration
- name: resourceGroupNameFromParameterOrSettings
  ${{ if eq(parameters.resourceGroupNameBase, 'useDefault') }}:
    value: $[variables['resourceGroupNameBaseFromAdoPipelineSettings']]
  ${{ if ne(parameters.resourceGroupNameBase, 'useDefault') }}:
    value: ${{ parameters.resourceGroupNameBase }}

- name: resourceGroupName
  value: $(resourceGroupNameFromParameterOrSettings)-$(location)-${{ parameters.environmentSuffix }}

- name: syntheticBaseName
  value: $(resourceGroupName)

- name: syntheticBaseNameWithoutEnvironmentSuffix
  value: $(resourceGroupNameFromParameterOrSettings)-$(location)

- name: baseName
  value: >-
    $[coalesce(
      '${{ parameters.baseName }}',
      variables['syntheticBaseName'])]

- name: armTemplateNameParameter
  value: $(baseName)

- name: environmentName
  value: >-
    $[format('{0}-{1}',
      coalesce('${{ parameters.baseName }}', variables['syntheticBaseNameWithoutEnvironmentSuffix']),
      '${{ parameters.environmentSuffix }}')]
